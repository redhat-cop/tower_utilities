---
# defaults file for ansible-tower-manage

############################################################
#               Tower Installation Vars                    #
############################################################

# Tower release version, either fixed e.g. 3.7.2 or "latest"
tower_release_version: latest

# Working location for installation files
tower_working_location: "/var/tmp"

# Tower variables
tower_admin_password: "password"

# Use the default tower installation template
pre_tasks_process_template: true

# Postgresql variables
tower_pg_database: "awx"
tower_pg_username: "awx"
tower_pg_password: "password"

# RabbitMQ variables
tower_rabbitmq_username: tower
tower_rabbitmq_password: "password"
tower_rabbitmq_cookie: "cookiemonster"
tower_rabbitmq_port: 5672
tower_rabbitmq_vhost: tower
tower_rabbitmq_use_long_name: false

tower_releases_url: https://releases.ansible.com/ansible-tower/setup
tower_setup_file: ansible-tower-setup-{{ tower_release_version }}.tar.gz

tower_server: "https://localhost"

############################################################
#               Ansible host settings.                 #
############################################################

# Default setup for a single node instance with internal DB
tower_nodes:
  - "localhost ansible_connection=local"

tower_database_node: ""
tower_database_port: "5432"

############################################################
# Automation Hub (AH) Configuration
############################################################

# as long as the host name is empty, Automation Hub will NOT be installed
# FIXME: not sure if more than one automation hub is really possible
tower_ah_nodes: []

# the default configures an AH using the default database with similar defaults
# as Tower
tower_ah_admin_password: "{{ tower_admin_password }}"
# if tower_database_node isn't defined or is empty,
# the host where the installation takes place is deemed to host the DB
tower_ah_pg_node: "{{ tower_database_node | default(ansible_host | default(inventory_hostname), true) }}"
tower_ah_pg_port: "{{ tower_database_port }}"
tower_ah_pg_database: 'automationhub'  # it is NOT supported to use the same name as for Tower!
tower_ah_pg_username: "{{ tower_pg_username }}"
tower_ah_pg_password: "{{ tower_pg_password }}"
tower_ah_pg_sslmode: prefer

# It makes no sense to set the cert vaules in defaults,
# these are example values only.
#
# Certificate and key to install in Automation Hub node
# tower_ah_ssl_cert: ~/certs/{{ tower_ah_server | urlsplit('hostname') }}.crt
# tower_ah_ssl_key: ~/certs/{{ tower_ah_server | urlsplit('hostname') }}.key

# Certificate and key to install in nginx for the web UI and API
# tower_ssl_cert: ~/certs/{{ tower_server | urlsplit('hostname') }}.crt
# tower_ssl_key: ~/certs/{{ tower_server | urlsplit('hostname') }}.key

# Server-side SSL settings for PostgreSQL (when we are installing it).
# tower_pg_ssl_cert: ~/certs/{{ tower_database_node }}.crt
# tower_pg_ssl_key: ~/certs/{{ tower_database_node }}.key

# If set, this will install a custom CA certificate to the system trust store.
# tower_custom_ca_cert: /etc/ipa/ca.crt

# The default install will deploy a TLS enabled Automation Hub.
# If for some reason this is not the behavior wanted one can
# disable TLS enabled deployment.
#
# tower_ah_disable_https: False
# The default install will generate self-signed certificates for the Automation
# Hub service. If you are providing valid certificate via automationhub_ssl_cert
# and automationhub_ssl_key, one should toggle that value to True.
#
# tower_ah_ssl_validate_certs: False
# Isolated Tower nodes automatically generate an RSA key for authentication;
# To disable this behavior, set this value to false
# isolated_key_generation=true
...
